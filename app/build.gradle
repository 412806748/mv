apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            //设置支持的SO库架构
            abiFilters 'arm64-v8a', 'armeabi-v7a'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

    }


    //不同渠道的签名，可以定义多个
    signingConfigs {
        release {
            // 绝对路径或相对路径
            storeFile file("imooc_voice_key")
            storePassword "123456"
            keyAlias "qndroid"
            keyPassword "123456"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main {
            if (isBuildModule.toBoolean()) {
                //单独运行
                manifest.srcFile 'src/main/alone/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                resources {
                    //正式版本时.剔除debug文件夹下的所有调式文件
                    exclude 'src/debug/*'
                }
            }
        }
    }

    //统一资源前缀,规范资源引用
    resourcePrefix "app_"

    dataBinding {
        enabled true
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

}

dependencies {
    testImplementation rootProject.ext.androidx["junit"]
    androidTestImplementation rootProject.ext.androidx["androidx.test.ext-junit"]
    androidTestImplementation rootProject.ext.androidx["androidx.test.espresso:espresso-core"]

    //组件中依赖阿里路由编译框架
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
    //宿主项目中判断组件是否需要独立运行
    if (isBuildModule.toBoolean()) {
        //组件独立运行时，宿主项目直接依赖基础库，避免编译错误
        implementation project(':library_base')
    } else {
        //主业务模块
        implementation project(':module_main')
        //首页模块
        implementation project(':module_home')
        //社区模块
        implementation project(':module_community')
        //更多模块
        implementation project(':module_more')
        //视频播放模块
        implementation project(':module_player')
        //用户模块
        implementation project(':module_user')
    }
}
